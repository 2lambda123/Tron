# Another Sample config that ports some of our batches (as a sanity check on our options we need)
--- !TronConfiguration

nodes:
    - &nodeBatch02 !Node
        hostname: batch2
    - &nodeBatch03 !Node
        hostname: batch3
    - &nodeBatch04 !Node
        hostname: batch4

resources:
    - &resourceAdResultsLog !FileResource
        # We need to make sure the final log file for the day is present
        path_expression: "/nail/scribe/scribe_logs/business_ads_results_log/business_ads_results_log-%{yesterday_year}d-%{yesterday_month}-${yesterday_day}d_00023.gz"

jobs:
    - &jobMergedAdLogDaily !BatchJob
        name: "generated_merged_ad_log_daily"
        path: "$BATCH_DIR/ads/generate_merged_ad_log.py"
        schedule: daily
        node: *nodeBatch04

    - &jobClicksDaily !BatchJob
        name: "process_ad_clicks_daily"
        path: "$BATCH_DIR/ads/populate_ad_clicks.py"
        schedule: daily
        node: *nodeBatch04
        dependencies:
            - !JobResource
                job: *jobMergedAdLogDaily
                last_success: today

    - &jobImpressionsDaily !BatchJob
        name: "process_ad_impressions_daily"
        path: "$BATCH_DIR/ads/populate_ad_impressions.py"
        schedule: daily
        node: *nodeBatch04
        dependencies:
            - !JobResource
                job: *jobMergedAdLogDaily
                last_success: today

    - &jobBizViewsDaily !BatchJob
        name: "process_biz_views_daily"
        path: "$BATCH_DIR/populate_biz_views.py"
        schedule: daily
        node: *nodeBatch04

    - &jobAnnounceViewDaily !BatchJob
        name: "process_announce_views_daily"
        path: "$BATCH_DIR/process_announce_view_log.py"
        schedule: daily
        node: *nodeBatch04

    - &jobRedirectDaily !BatchJob
        name: "process_redirect_daily"
        path: "$BATCH_DIR/process_redirect_log.py"
        schedule: daily
        node: *nodeBatch04
    
    # After all our logs are processed for the prior day, do our 
    # daily batches based on that data.        
    - &jobAdStatsDaily !BatchJob
        name: "business_ad_stats_daily"
        path: "$BATCH_DIR/ads/business_ad_stats.py"
        schedule: daily
        node: *nodeBatch04
        dependencies:
            - !JobResource
                job: *jobImpressionsDaily
                last_success: today
            - !JobResource
                job: *jobClicksDaily
                last_success: today
            - !JobResource
                job: *jobBizViewsDaily
                last_success: today
            - !JobResource
                job: *jobRedirectDaily
                last_success: today
    
    - &jobAdBillingDaily !BatchJob
        name: "business_ad_billing_daily"
        path: "$BATCH_DIR/ads/business_ad_billing.py"
        schedule: daily
        node: *nodeBatch04
        dependencies:
            - !JobResource
                job: *jobAdStatsDaily
                last_success: today

    # We need an extra, special run of billing batch on the first of the month
    - &jobAdBillingMonthly !BatchJob
        name: "business_ad_billing_monthly"
        path: "$BATCH_DIR/ads/business_ad_billing.py"
        args: "--end_of_month"
        schedule: !DailyScheduler
            day: 1
        node: *nodeBatch04
        dependencies:
            - !JobResource
                job: *jobAdStatsDaily
                last_success: today

    - &jobAdControlDaily !BatchJob
        name: "business_ad_control_daily"
        path: "$BATCH_DIR/business_ad_control.py"
        schedule: daily
        node: *nodeBatch04
        dependencies:
            - !JobResource
                job: *jobAdBillingDaily
                last_success: today

    # And then we have our hourly runs
    - &jobMergedAdLogHourly !BatchJob
        name: "generated_merged_ad_log_hourly"
        path: "$BATCH_DIR/ads/generate_merged_ad_log.py"
        args: "--date $YEAR-$MONTH-$DAY --exclude-null-events"
        schedule: hourly
        node: *nodeBatch04

    - &jobClicksHourly !BatchJob
        name: "process_ad_clicks_hourly"
        path: "$BATCH_DIR/ads/populate_ad_clicks.py"
        args: "--date $YEAR-$MONTH-$DAY"
        schedule: hourly
        node: *nodeBatch04
        dependencies:
            - !JobResource
                job: *jobMergedAdLogHourly
                last_success: 20mins

    - &jobImpressionsHourly !BatchJob
        name: "process_ad_impressions_hourly"
        path: "$BATCH_DIR/ads/populate_ad_impressions.py"
        args: "--date $YEAR-$MONTH-$DAY"
        schedule: hourly
        node: *nodeBatch04
        dependencies:
            - !JobResource
                job: *jobMergedAdLogHourly
                last_success: 20mins

    - &jobAdStatsHourly !BatchJob
        name: "business_ad_stats_hourly"
        path: "$BATCH_DIR/ads/business_ad_stats.py"
        args: "--visible_ads_only --days_only --date=$YEAR-$MONTH-$DAY"
        schedule: hourly
        node: *nodeBatch04
        dependencies:
            - !JobResource
                job: *jobImpressionsHourly
                last_success: 20mins
            - !JobResource
                job: *jobClicksHourly
                last_success: 20mins
            - !JobResource
                # We don't want to be running stats until yesterday's has completed
                job: *jobAdStatsDaily
                last_success: today
            

    - &jobAdControlHourly !BatchJob
        name: "business_ad_control_hourly"
        path: "$BATCH_DIR/business_ad_control.py"
        args: "--control_only_advertisers"
        schedule: hourly
        node: *nodeBatch04
        dependencies:
            - !JobResource
                job: *jobAdStatsHourly
                last_success: 20mins
