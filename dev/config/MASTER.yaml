state_persistence:
  name: "tron_state"
  table_name: "-tmp-tron_state"
  store_type: "shelve"
  buffer_size: 10
  dynamodb_region: us-west-1

eventbus_enabled: True
ssh_options:
   agent: True

nodes:
  - hostname: localhost

external_urls:
  job:
    "Compute Resources": 'https://app.signalfx.com/#/dashboard/DJzYJDkAcAA?density=4&groupId=DJzYWe9AcAA&configId=DpqyzW_AgB&&startTime=-1d&endTime=Now&variables%5B%5D=PaaSTA%20Service%3Dpaasta_service:%5B"{namespace}"%5D&variables%5B%5D=PaaSTA%20Instance%3Dpaasta_instance:%5B"{name}.*"%5D&variables%5B%5D=PaaSTA%20Cluster%3Dpaasta_cluster:%5B"{cluster}"%5D'
  job_run:
    "Compute Resources": 'https://app.signalfx.com/#/dashboard/DJzYJDkAcAA?density=4&groupId=DJzYWe9AcAA&configId=DpqyzW_AgBA&startTime=-1d&endTime=Now&variables%5B%5D=PaaSTA%20Service%3Dpaasta_service:%5B"{namespace}"%5D&variables%5B%5D=PaaSTA%20Instance%3Dpaasta_instance:%5B"{actionname}"%5D&variables%5B%5D=PaaSTA%20Cluster%3Dpaasta_cluster:%5B"{cluster}"%5D'
  action_run:
    "Compute Resources": 'https://app.signalfx.com/#/dashboard/DJzYJDkAcAA?density=4&groupId=DJzYWe9AcAA&configId=DpqyzW_AgBA&startTime=-1d&endTime=Now&variables%5B%5D=PaaSTA%20Service%3Dpaasta_service:%5B"{namespace}"%5D&variables%5B%5D=PaaSTA%20Instance%3Dpaasta_instance:%5B"{actionname}"%5D&variables%5B%5D=PaaSTA%20Cluster%3Dpaasta_cluster:%5B"{cluster}"%5D'

external_text:
  job:
    "CLI Commands": |
      tronview-{cluster} {name}
      tronctl-{cluster} start {name}
  job_run:
    "CLI Commands": |
      tronview-{cluster} {name}.{runid}
      tronctl-{cluster} rerun {name}.{runid}
  action_run:
    "CLI Commands": |
      tronview-{cluster} {name}.{runid}.{actionname}
      tronctl-{cluster} retry {name}.{runid}.{actionname}

mesos_options:
  master_address: mesos.paasta-mesosstage.yelp
  master_port: 5050
  role: '*'
  enabled: True
  dockercfg_location: file:///root/.dockercfg

jobs:
  testjob0:
    enabled: false
    node: localhost
    schedule: "cron * * * * *"
    actions:
      zeroth:
        command: "sleep 5"
        trigger_downstreams:
          minutely: "{ymdhm}"
        cpus: 1
        mem: 100

  testjob1:
    enabled: false
    node: localhost
    schedule: "cron * * * * *"
    actions:
      first:
        command: "sleep 5"
        cpus: 1
        mem: 100
      second:
        command: "echo 'hello world'"
        requires: [first]
        triggered_by:
          - "MASTER.testjob0.zeroth.minutely.{ymdhm}"
        trigger_downstreams:
          minutely: "{ymdhm}"
        cpus: 1
        mem: 100

  testjob2:
    enabled: false
    node: localhost
    schedule: "cron * * * * *"
    actions:
      first:
        command: "echo 'goodbye, world'"
        cpus: 1
        mem: 100
        triggered_by:
          - "MASTER.testjob1.second.minutely.{ymdhm}"

  retrier:
    node: localhost
    schedule: "cron 0 0 1 1 *"
    actions:
      failing:
        command: exit 1
        retries: 1
        retries_delay: 5m
