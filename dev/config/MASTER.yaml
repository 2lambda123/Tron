state_persistence:
  name: "tron_state"
  table_name: "tmp-tron-state"
  store_type: "shelve"
  buffer_size: 1
  dynamodb_region: us-west-1

eventbus_enabled: True
ssh_options:
   agent: True


mesos_options:
  master_address: mesos.paasta-mesosstage.yelp
  master_port: 5050
  role: '*'
  enabled: True
  dockercfg_location: file:///root/.dockercfg

k8s_options:
  enabled: true
  kubeconfig_path: /nail/home/luisp/pg/Yelp/Tron/kubestage.conf

# Replace this with the path relative to your home dir to use
# action_runner:
#   runner_type: "subprocess"
#   remote_status_path: "pg/tron/status"
#   remote_exec_path: "pg/tron/.tox/py36/bin"
nodes:
  - hostname: "localhost"
    username: "batch"
    name: "localhost"
  - hostname: "localhost"
    username: "batch"
    name: "paasta"


jobs:
   # luisp_test:
   #  actions:
   #    test_action_output:
   #      command: echo "I'm up and running $PAASTA_DOCKER_IMAGE"; sleep 10; echo "This message goes to stderr" >&2
   #      cpus: 0.1
   #      disk: 1024
   #      mem: 100
   #      docker_image: docker-paasta.yelpcorp.com:443/services-paasta-contract-monitor:paasta-a6b119d12ebb3c3b291d2c483661ce335f0a5180
   #      cap_add: [KILL]
   #      cap_drop: [CHOWN, KILL, NET_RAW]
   #      env:
   #        PAASTA_CLUSTER: kubestage
   #        PAASTA_DEPLOY_GROUP: everything
   #        PAASTA_DOCKER_IMAGE: services-paasta-contract-monitor:paasta-a6b119d12ebb3c3b291d2c483661ce335f0a5180
   #        PAASTA_GIT_SHA: a6b119d1
   #        PAASTA_INSTANCE: luisp_test.test_action_output
   #        PAASTA_INSTANCE_TYPE: tron
   #        PAASTA_MONITORING_TEAM: compute_infra
   #        PAASTA_RESOURCE_CPUS: '0.1'
   #        PAASTA_RESOURCE_DISK: '1024'
   #        PAASTA_RESOURCE_MEM: '50'
   #        ENABLE_PER_INSTANCE_LOGSPOUT: '1'
   #        PAASTA_SERVICE: paasta-contract-monitor
   #      executor: kubernetes
   #      extra_volumes: []
   #      secret_env: {}
   #  allow_overlap: true
   #  node: localhost
   #  schedule:
   #    type: cron
   #    value: '*/5 * * * *'
   #  use_k8s: true
  luisp_indexer_test:
    actions:
      run:
        command: /code/virtualenv_run/bin/python -m ownership.batches.indexers.puppet_role -vv --dry-run
        cpus: 0.5
        disk: 4096
        docker_image: docker-paasta.yelpcorp.com:443/services-ownership:paasta-ac6e3a49271a7d2aec793b572e3da8ca16af6bdc
        cap_drop:
          - SETPCAP
          - MKNOD
          - AUDIT_WRITE
          - CHOWN
          - NET_RAW
          - DAC_OVERRIDE
          - FOWNER
          - FSETID
          - KILL
          - SETGID
          - SETUID
          - NET_BIND_SERVICE
          - SYS_CHROOT
          - SETFCAP
        env:
          DB_CLUSTER_NAME: ownership_stage
          ENABLE_PER_INSTANCE_LOGSPOUT: "1"
          PAASTA_CLUSTER: norcal-devc
          PAASTA_DEPLOY_GROUP: stage.everything
          PAASTA_DOCKER_IMAGE: services-ownership:paasta-ac6e3a49271a7d2aec793b572e3da8ca16af6bdc
          PAASTA_GIT_SHA: ac6e3a49
          PAASTA_INSTANCE: luisp_indexer_test.run
          PAASTA_INSTANCE_TYPE: tron
          PAASTA_MONITORING_TEAM: noop
          PAASTA_RESOURCE_CPUS: '0.5'
          PAASTA_RESOURCE_DISK: '4096'
          PAASTA_RESOURCE_MEM: '512'
          PAASTA_SECRET_MYSQL_OWNERSHIPDEV_MASTER_VAR: ''
          PAASTA_SECRET_MYSQL_OWNERSHIPRDONLY_READ_VAR: ''
          PAASTA_SECRET_MYSQL_OWNERSHIPRPT_REPORTING_VAR: ''
          PAASTA_SERVICE: ownership
        executor: kubernetes
        extra_volumes: [
          {
            "host_path": "/nail/etc/services",
            "container_path": "/nail/etc/services",
            "mode": "RO"
          },
          {
            "host_path": "/nail/etc/habitat",
            "container_path": "/nail/etc/habitat",
            "mode": "RO"
          },
          {
            "host_path": "/nail/etc/datacenter",
            "container_path": "/nail/etc/datacenter",
            "mode": "RO"
          },
          {
            "host_path": "/nail/etc/ecosystem",
            "container_path": "/nail/etc/ecosystem",
            "mode": "RO"
          },
          {
            "host_path": "/nail/etc/runtimeenv",
            "container_path": "/nail/etc/runtimeenv",
            "mode": "RO"
          },
          {
            "host_path": "/nail/etc/region",
            "container_path": "/nail/etc/region",
            "mode": "RO"
          },
          {
            "host_path": "/nail/etc/superregion",
            "container_path": "/nail/etc/superregion",
            "mode": "RO"
          },
          {
            "host_path": "/nail/srv",
            "container_path": "/nail/srv",
            "mode": "RO"
          },
          {
            "host_path": "/etc/boto_cfg",
            "container_path": "/etc/boto_cfg",
            "mode": "RO"
          },
          {
            "host_path": "/var/run/synapse/services/",
            "container_path": "/var/run/synapse/services/",
            "mode": "RO"
          },
          {
            "host_path": "/nail/etc/zookeeper_discovery/",
            "container_path": "/nail/etc/zookeeper_discovery/",
            "mode": "RO"
          },
          {
            "host_path": "/nail/etc/kafka_discovery/",
            "container_path": "/nail/etc/kafka_discovery/",
            "mode": "RO"
          },
          {
            "host_path": "/nail/bulkdata",
            "container_path": "/nail/bulkdata",
            "mode": "RO"
          },
          {
            "host_path": "/nail/etc/srv-configs",
            "container_path": "/nail/etc/srv-configs",
            "mode": "RO"
          },
          {
            "host_path": "/nail/etc/mrjob",
            "container_path": "/nail/etc/mrjob",
            "mode": "RO"
          },
          {
            "host_path": "/nail/opt/data_pipeline_schemas",
            "container_path": "/nail/opt/data_pipeline_schemas",
            "mode": "RO"
          },
        ]
        mem: 512
        retries: 2
    monitoring:
      page: false
      runbook: http://y/rb-ownership
      team: noop
      ticket: false
    node: paasta
    queueing: false
    schedule: cron */2 * * * *
    use_k8s: true
