#!/usr/bin/env python -t
"""Tron Control

Part of the command line interface to the tron daemon. Provides the interface to controlling jobs and runs.
"""
import sys
import os.path
import urllib2
import urlparse
import simplejson
import optparse

import yaml

from tron import cmd

LOCAL = "http://localhost:8082"

def parse_options():
    parser = optparse.OptionParser("usage: %prog [-v] [--server=<servername>] <command> <object>")
    parser.add_option("--server", action="store", dest="server", help="Server URL to connect to", default=LOCAL)
    parser.add_option("--verbose", "-v", action="count", dest="verbose", help="Verbose logging", default=0)

    (options, args) = parser.parse_args(sys.argv)

    if len(args) < 2:
        parser.error("Missing command")

    return options, args[1:]

def edit(options, command, id):
    data = {'command': command}
    status, content = cmd.request(options, "/jobs/%s" % id.replace('.', '/'), data=data)

    if status == cmd.OK:
        print content['result']
    else:
        print >>sys.stderr, "Unexpected response from run start operation: %r" % ((status, content),)

def main():
    """run tronctl"""
    options, args = parse_options()
    
    cmd.load_config(options)

    status, content = cmd.request(options, "/")
    if status != cmd.OK or not content:
        print >>sys.stderr, "Error connecting to tron server at %s" % options.server
        sys.exit(1)

    edit(options, args[0], args[1] if len(args) > 1 else '')
    cmd.save_config(options)

if __name__ == '__main__':
    main()
